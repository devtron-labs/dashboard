name: Validate Pull Request

on:
  pull_request:
    types:
      - opened
      - synchronize
      - edited
      - reopened
    branches:    
      - 'main'
      - 'release-**'

jobs:
  validate-PR-issue:
    runs-on: ubuntu-latest
    permissions:
      issues: write
      contents: read
      pull-requests: write
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Validate Issue Reference
      env:
        GH_TOKEN: ${{ github.token }}
        PR_BODY: ${{ github.event.pull_request.body }}
        PRNUM: ${{ github.event.pull_request.number }}
        TITLE: ${{ github.event.pull_request.title }}
      run: |
        set -x
        echo "======================Start================================"
        curl --header 'authorization: Bearer ${{ secrets.GH_PR_VALIDATOR_TOKEN }}' https://api.github.com/repos/devtron-labs/sprint-task/issues
        echo "========================================================================"

        # Skip validation for documentation or chore PRs
        if [[ "$TITLE" =~ ^(doc:|docs:|chore:) ]]; then
          echo "Skipping validation for docs/chore PR."
          echo "PR NUMBER-: $PRNUM "
          gh pr edit $PRNUM --remove-label "PR:Issue-verification-failed"
          gh pr edit $PRNUM --add-label "PR:Ready-to-Review"
          exit 0
        fi

        # Define all issue matching patterns
        patterns=(
          "((Fixes|Resolves) #[0-9]+)" 
          "((Fixes|Resolves) https://github.com/devtron-labs/devtron/issues/[0-9]+)" 
          "((Fixes|Resolves) devtron-labs/devtron#[0-9]+)"
          "(Fixes|Resolves):?\\s+\\[#([0-9]+)\\]" 
          "((Fixes|Resolves):? #devtron-labs/devops-sprint/issues/[0-9]+)"
          "((Fixes|Resolves):? #devtron-labs/sprint-tasks/issues/[0-9]+)" 
          "((Fixes|Resolves) https://github.com/devtron-labs/devops-sprint/issues/[0-9]+)"
          "((Fixes|Resolves) https://github.com/devtron-labs/sprint-tasks/issues/[0-9]+)"
        )
        
        # Extract issue number from PR body
        extract_issue_number() {
          local pattern="$1"
          if [[ "$PR_BODY" =~ $pattern ]]; then
            echo "matched for this patterent $pattern"
            echo "${BASH_REMATCH[0]}" | grep -oE "[0-9]+" | tr -d '\r\n'
            return 0
          else
            echo "Not match the patterns $pattern"
          fi
          return 1
        }

        issue_num=""
        for pattern in "${patterns[@]}"; do
          echo "Now checking for $pattern"
          issue_num=$(extract_issue_number "$pattern") && echo "issue no-:" $issue_num  && break
        done

        if [[ -z "$issue_num" ]]; then
          echo "No valid issue number found."
          gh pr edit $PRNUM --add-label "PR:Issue-verification-failed"
          gh pr edit $PRNUM --remove-label "PR:Ready-to-Review"
          exit 1
        fi

        # Form the issue URL
        if [[ "$PR_BODY" =~ (https://github.com/.*/issues/[0-9]+) ]]; then
          url="${BASH_REMATCH[0]}"
        else
          url="https://github.com/devtron-labs/devtron/issues/$issue_num"
        fi

        # echo "========================================================================"
        # repo_url=$(echo "$url" | cut -d'/' -f1-5)
        # gh issue list --repo $repo_url --json "url" 
        # echo "========================================================================"


        # Check if the issue exists
        response_code=$(curl -s -o /dev/null -w "%{http_code}" "$url")
        if [[ "$response_code" -eq 200 ]]; then
          echo "Issue #$issue_num is valid and exists."
          gh pr edit $PRNUM --remove-label "PR:Issue-verification-failed"
          gh pr edit $PRNUM --add-label "PR:Ready-to-Review"
        else
          echo "Issue not found. Invalid URL or issue number."
          gh pr comment $PRNUM --body "PR is not linked to a valid issue. Please update."
          gh pr edit $PRNUM --add-label "PR:Issue-verification-failed"
          gh pr edit $PRNUM --remove-label "PR:Ready-to-Review"
          exit 1
        fi
